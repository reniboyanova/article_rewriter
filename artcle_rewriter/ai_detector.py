import torch
import requests
from transformers import AutoModelForSequenceClassification, AutoTokenizer
from utils.utils import get_api_key
from article_writer import ArticleWriter


class AIDetector:
    @staticmethod
    def ai_detector(text) -> float:
        model_name = "roberta-base-openai-detector"  # for gpt-2, but after tries with text, generated by gpt-4o makes good results
        tokenizer = AutoTokenizer.from_pretrained(model_name)
        model = AutoModelForSequenceClassification.from_pretrained(model_name)
        
        inputs = tokenizer(text, return_tensors="pt", truncation=True)
        outputs = model(**inputs)
        logits = outputs.logits
        probs = torch.softmax(logits, dim=-1)

        return probs[0][1].item() * 100
    
    @staticmethod
    def get_ai_detection_edenai(text):
        api_url = "https://api.edenai.run/v2/text/ai_detection"
        api_key = get_api_key('./EDENAI_API_KEY.txt')
        headers = {
        "Authorization": f"Bearer {api_key}",
        "Content-Type": "application/json"
        }

        data = {
            "text": text,
            "providers": "originalityai,winstonai"
        }
        
        response = requests.post(api_url, json=data, headers=headers)

        if response.status_code == 200:
            result = response.json()

            originalityai_result = result.get('originalityai')
            
            if originalityai_result and originalityai_result.get('status') == 'success':
                prediction = originalityai_result['items'][0].get('prediction')
                ai_score = originalityai_result['items'][0].get('ai_score')
                return {"prediction": prediction, "ai_score": ai_score}
            else:
                return {"error": "No valid result from OriginalityAI"}
        else:
            return {"error": f"API request failed with status code {response.status_code}"}
        

if __name__ == "__main__":
    example_data_output  = {
    "date": "2024-10-07",
    "place_of_event": "Barvikha Luxury Village concert hall",
    "involved_individuals": ["Valentina Alekseeva", "Irina Mironova", "Ulyana Evdokimova"],
    "key_points_in_news": [
        "Valentina Alekseeva won the Miss Russia 2024 beauty pageant.",
        "Alekseeva will represent Russia in the 73rd Miss Universe competition.",
        "She received a prize of 1 million rubles.",
        "Irina Mironova was the runner-up, and Ulyana Evdokimova secured third place.",
        "Valentina Alekseeva is a medical student at Pirogov Russian National Research Medical University."
    ],
    "summary": "Valentina Alekseeva, an 18-year-old from the Chuvash Republic, won the Miss Russia 2024 beauty pageant. She will represent Russia in the 73rd Miss Universe competition and received a 1 million ruble prize. The event took place at the Barvikha Luxury Village concert hall, with Irina Mironova and Ulyana Evdokimova placing second and third, respectively. Alekseeva is currently pursuing a medical degree."
}
    art_wr = ArticleWriter(example_data_output)
    base_art = art_wr.write_article()
    ai_d = AIDetector()
    ai_score = ai_d.ai_detector(base_art.article_text)
    print(f"Ai score with roberta: {ai_score}")
    ai_score_2 = ai_d.get_ai_detection_edenai(base_art.article_text)
    print(f"Ai score with edenapi: {ai_score_2}")
    